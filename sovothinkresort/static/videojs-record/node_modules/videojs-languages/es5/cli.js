#!/usr/bin/env node
'use strict';

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _cli = require('cli');

var _cli2 = _interopRequireDefault(_cli);

var _api = require('./api');

var _api2 = _interopRequireDefault(_api);

_cli2['default'].enable('help', 'status', 'version');

_cli2['default'].parse({
  dir: ['d', ['A directory, relative to cwd, into which converted files will be', 'placed. If the directory does not exist, an attempt will be made', 'to create it. If not provided or creation fails, converted .js', 'files will be placed alongside their .json sources.'].join(' '), 'string']
});

_cli2['default'].main(function (args, options) {
  this.debug('args: ' + JSON.stringify(args) + ', options: ' + JSON.stringify(options));

  var result = (0, _api2['default'])(args, options.dir);
  var conversions = result.srces.map(function (s, i) {
    return s + ' => ' + result.dests[i];
  });
  var sep = '\n  ';

  if (conversions.length) {
    this.ok('videojs-language: conversion complete: ' + (sep + conversions.join(sep)));
  } else {
    this.info('videojs-language: nothing to convert');
  }
});